{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:jsdoc/recommended",
    "plugin:react/recommended"
  ],
  "plugins": ["prettier", "import", "unused-imports", "jsdoc", "react"],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true // Enable JSX parsing for React
    }
  },
  "rules": {
    // Prettier rules
    "prettier/prettier": [
      "error",
      {
        "printWidth": 80,
        "tabWidth": 2,
        "useTabs": false,
        "semi": true,
        "singleQuote": true,
        "trailingComma": "es5",
        "bracketSpacing": true,
        "arrowParens": "always",
        "endOfLine": "lf"
      }
    ],

    // Basic code quality
    "no-unused-vars": [
      "warn",
      { "vars": "all", "args": "after-used", "ignoreRestSiblings": true }
    ],
    "eqeqeq": ["error", "always"],
    "curly": "error",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-implicit-coercion": "warn",

    // Import rules
    "import/order": [
      "error",
      { "alphabetize": { "order": "asc", "caseInsensitive": true } }
    ],
    "import/no-unresolved": "error",
    "import/newline-after-import": "error",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],

    // JSDoc for better documentation
    "jsdoc/check-alignment": "warn",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-tag-names": "error",
    "jsdoc/require-jsdoc": [
      "warn",
      {
        "require": {
          "FunctionDeclaration": true,
          "ClassDeclaration": true,
          "MethodDefinition": true
        }
      }
    ],
    "jsdoc/require-param": "warn",
    "jsdoc/require-returns": "warn",

    "prefer-const": "error", // Encourage the use of const for variables that don't change
    "no-var": "error", // Disallow var in favor of let/const
    "object-shorthand": ["error", "always"], // Enforce concise object syntax
    "prefer-arrow-callback": "error" // Encourage arrow functions for callbacks
  },
  "settings": {
    "jsdoc": {
      "mode": "typescript"
    }
  }
}
